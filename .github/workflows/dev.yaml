name: merge from dev

on:
  workflow_dispatch:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      result: ${{ steps.accept_pr.outputs.result }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pylint
      - name: Lint code
        run: |
          pylint backend
        # continue-on-error: true

      # - name: SonarCloud Scan
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   continue-on-error: true

      # - name: Set result
      #   id: accept_pr
      #   run: echo "result = success" # Set the result to success by default

  notify:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Send Email Notification on Failure
        # if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }} #use app password here
          subject: 'CI Failure Notification'
          to: prantaw@gmail.com
          body: |
            The CI build failed for the repository.
            
            **Failure Details:**
            ```
            ${{ steps.test.outputs.stdout }}
            ```

            Check the GitHub Actions workflow for details.
        

      # - name: Merge dev into main
      #   run: |
      #     git config --global user.email "prantaw@gmail.com"
      #     git config --global user.name "prantasaha"
      #     git pull
      #     git checkout master
      #     git merge --allow-unrelated-histories dev
      #     git push origin master
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}