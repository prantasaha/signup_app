1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] /bin/sh: cd: line 0: can't cd to socket-client: No such file or directory\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] cd socket-client && npm start exited with code 2\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! code ELIFECYCLE\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! errno 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! react-socket-app@1.0.0 start: `concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"`\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Exit status 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Failed at the react-socket-app@1.0.0 start script.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! A complete log of this run can be found in:\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR!     /root/.npm/_logs/2023-11-22T06_37_18_048Z-debug.log\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"PostgreSQL Database directory appears to contain a database; Skipping initialization\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-08 16:06:50.820 UTC [1] LOG:  starting PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-08 16:06:50.821 UTC [1] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-08 16:06:50.821 UTC [1] LOG:  listening on IPv6 address \"::\", port 5432\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-08 16:06:50.822 UTC [1] LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-08 16:06:50.826 UTC [28] LOG:  database system was shut down at 2023-12-08 16:05:51 UTC\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-08 16:06:50.831 UTC [1] LOG:  database system is ready to accept connections\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] /bin/sh: cd: line 0: can't cd to socket-client: No such file or directory\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] cd socket-client && npm start exited with code 2\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! code ELIFECYCLE\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! errno 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! react-socket-app@1.0.0 start: `concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"`\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Exit status 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Failed at the react-socket-app@1.0.0 start script.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! A complete log of this run can be found in:\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR!     /root/.npm/_logs/2023-11-22T06_41_41_851Z-debug.log\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] http server listening on port 4001\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] > socket-client@0.1.0 start /app/socket-client\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] > react-scripts start\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Starting the development server...\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Compiled successfully!\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] You can now view socket-client in the browser.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1]   Local:            http://localhost:3000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1]   On Your Network:  http://172.17.0.4:3000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Note that the development build is not optimized.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] To create a production build, use npm run build.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] TWW4CUw0oqXe1DhKAAAA has connected to room-1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] 39YTc7vzkXAH18nHAAAB has connected to room-1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] TWW4CUw0oqXe1DhKAAAA has disconnected from room-1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] 39YTc7vzkXAH18nHAAAB has disconnected from room-1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=info msg=\"auto snapshotter: using native\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=warning msg=\"using host network as the default\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=info msg=\"found worker \\\"49tsjx26c0s1j0ahxxk5egqh2\\\", labels=map[org.mobyproject.buildkit.worker.executor:oci org.mobyproject.buildkit.worker.hostname:6420f3417ae7 org.mobyproject.buildkit.worker.network:host org.mobyproject.buildkit.worker.oci.process-mode:sandbox org.mobyproject.buildkit.worker.selinux.enabled:false org.mobyproject.buildkit.worker.snapshotter:native], platforms=[linux/amd64 linux/amd64/v2 linux/amd64/v3 linux/386]\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=warning msg=\"skipping containerd worker, as \\\"/run/containerd/containerd.sock\\\" does not exist\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=info msg=\"found 1 workers, default=\\\"49tsjx26c0s1j0ahxxk5egqh2\\\"\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=warning msg=\"currently, only the default worker can be used.\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:25:07Z\" level=info msg=\"running server on /run/buildkit/buildkitd.sock\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:26:41Z\" level=info msg=\"stopping server\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"buildkitd: context canceled\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] http server listening on port 4001\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] > socket-client@0.1.0 start /app/socket-client\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] > react-scripts start\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Starting the development server...\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Compiled successfully!\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] You can now view socket-client in the browser.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1]   Local:            http://localhost:3000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1]   On Your Network:  http://172.17.0.3:3000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Note that the development build is not optimized.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] To create a production build, use npm run build.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] Hx4VkFoFs-I2mGKKAAAA has connected to room-1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] JEhQMaK6DwO1lyMsAAAB has connected to room-1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Configuration complete; ready for start up\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: using the \"epoll\" event method\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: nginx/1.25.3\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: built by gcc 12.2.1 20220924 (Alpine 12.2.1_git20220924-r10) \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: OS: Linux 5.15.0-89-generic\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker processes\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 30\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 31\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 32\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 33\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 34\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 35\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 36\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/08 16:06:50 [notice] 1#1: start worker process 37\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] /bin/sh: cd: line 0: can't cd to socket-client: No such file or directory\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] cd socket-client && npm start exited with code 2\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! code ELIFECYCLE\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! errno 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! react-socket-app@1.0.0 start: `concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"`\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Exit status 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Failed at the react-socket-app@1.0.0 start script.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! A complete log of this run can be found in:\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR!     /root/.npm/_logs/2023-11-22T06_36_44_223Z-debug.log\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"The files belonging to this database system will be owned by user \"postgres\".\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"This user must also own the server process.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"The database cluster will be initialized with locale \"en_US.utf8\".\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"The default database encoding has accordingly been set to \"UTF8\".\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"The default text search configuration will be set to \"english\".\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Data page checksums are disabled.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"fixing permissions on existing directory /var/lib/postgresql/data ... ok\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"creating subdirectories ... ok\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"selecting dynamic shared memory implementation ... posix\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"selecting default max_connections ... 100\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"selecting default shared_buffers ... 128MB\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"selecting default time zone ... Etc/UTC\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"creating configuration files ... ok\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"running bootstrap script ... ok\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"performing post-bootstrap initialization ... ok\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"syncing data to disk ... ok\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Success. You can now start the database server using:\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"    pg_ctl -D /var/lib/postgresql/data -l logfile start\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"initdb: warning: enabling \"trust\" authentication for local connections\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"waiting for server to start....2023-12-06 13:25:55.998 UTC [48] LOG:  starting PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:55.999 UTC [48] LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.002 UTC [51] LOG:  database system was shut down at 2023-12-06 13:25:55 UTC\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.006 UTC [48] LOG:  database system is ready to accept connections\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":" done\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"server started\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"CREATE DATABASE\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"waiting for server to shut down....2023-12-06 13:25:56.221 UTC [48] LOG:  received fast shutdown request\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.223 UTC [48] LOG:  aborting any active transactions\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.224 UTC [48] LOG:  background worker \"logical replication launcher\" (PID 54) exited with exit code 1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.226 UTC [49] LOG:  shutting down\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.227 UTC [49] LOG:  checkpoint starting: shutdown immediate\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.250 UTC [49] LOG:  checkpoint complete: wrote 923 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.011 s, sync=0.010 s, total=0.025 s; sync files=301, longest=0.002 s, average=0.001 s; distance=4257 kB, estimate=4257 kB; lsn=0/1913078, redo lsn=0/1913078\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.257 UTC [48] LOG:  database system is shut down\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":" done\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"server stopped\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"PostgreSQL init process complete; ready for start up.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.380 UTC [1] LOG:  starting PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.380 UTC [1] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.380 UTC [1] LOG:  listening on IPv6 address \"::\", port 5432\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.382 UTC [1] LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.386 UTC [64] LOG:  database system was shut down at 2023-12-06 13:25:56 UTC\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:25:56.390 UTC [1] LOG:  database system is ready to accept connections\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:30:56.483 UTC [62] LOG:  checkpoint starting: time\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:31:17.468 UTC [62] LOG:  checkpoint complete: wrote 211 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=20.916 s, sync=0.016 s, total=20.986 s; sync files=167, longest=0.001 s, average=0.001 s; distance=970 kB, estimate=970 kB; lsn=0/1A362C0, redo lsn=0/1A058C8\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.420 UTC [1] LOG:  received fast shutdown request\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.421 UTC [1] LOG:  aborting any active transactions\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.421 UTC [80] FATAL:  terminating connection due to administrator command\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.423 UTC [1] LOG:  background worker \"logical replication launcher\" (PID 67) exited with exit code 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.425 UTC [62] LOG:  shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.426 UTC [62] LOG:  checkpoint starting: shutdown immediate\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.434 UTC [62] LOG:  checkpoint complete: wrote 12 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.002 s, total=0.009 s; sync files=4, longest=0.001 s, average=0.001 s; distance=194 kB, estimate=892 kB; lsn=0/1A36370, redo lsn=0/1A36370\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:39:34.452 UTC [1] LOG:  database system is shut down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"PostgreSQL Database directory appears to contain a database; Skipping initialization\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:43:05.945 UTC [1] LOG:  starting PostgreSQL 16.1 (Debian 16.1-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:43:05.945 UTC [1] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:43:05.945 UTC [1] LOG:  listening on IPv6 address \"::\", port 5432\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:43:05.947 UTC [1] LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:43:05.950 UTC [28] LOG:  database system was shut down at 2023-12-06 13:39:34 UTC\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:43:05.954 UTC [1] LOG:  database system is ready to accept connections\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:48:05.950 UTC [26] LOG:  checkpoint starting: time\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 13:48:05.959 UTC [26] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.010 s; sync files=2, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=0 kB; lsn=0/1A36458, redo lsn=0/1A36420\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.000 UTC [1] LOG:  received fast shutdown request\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.002 UTC [1] LOG:  aborting any active transactions\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.005 UTC [1] LOG:  background worker \"logical replication launcher\" (PID 31) exited with exit code 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.005 UTC [26] LOG:  shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.005 UTC [26] LOG:  checkpoint starting: shutdown immediate\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.008 UTC [26] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.004 s; sync files=0, longest=0.000 s, average=0.000 s; distance=0 kB, estimate=0 kB; lsn=0/1A36508, redo lsn=0/1A36508\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023-12-06 19:25:33.013 UTC [1] LOG:  database system is shut down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] internal/modules/cjs/loader.js:934\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]   throw err;\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]   ^\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] Error: Cannot find module '/app/server.js'\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:931:15)\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]     at Function.Module._load (internal/modules/cjs/loader.js:774:27)\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]     at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12)\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]     at internal/main/run_main_module.js:17:47 {\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]   code: 'MODULE_NOT_FOUND',\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0]   requireStack: []\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] }\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code 1\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] cd socket-client && npm start exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! code ELIFECYCLE\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! errno 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! react-socket-app@1.0.0 start: `concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"`\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Exit status 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Failed at the react-socket-app@1.0.0 start script.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! A complete log of this run can be found in:\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR!     /root/.npm/_logs/2023-11-22T06_46_04_892Z-debug.log\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"/docker-entrypoint.sh: Configuration complete; ready for start up\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: using the \"epoll\" event method\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: nginx/1.25.3\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: built by gcc 12.2.1 20220924 (Alpine 12.2.1_git20220924-r10) \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: OS: Linux 5.15.0-89-generic\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker processes\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 30\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 31\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 32\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 33\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 34\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 35\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 36\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 18:46:20 [notice] 1#1: start worker process 37\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"172.17.0.1 - - [06/Dec/2023:18:46:41 +0000] \"GET / HTTP/1.1\" 200 2365 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\" \"-\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"172.17.0.1 - - [06/Dec/2023:18:46:41 +0000] \"GET /static/js/2.1f8a1052.chunk.js HTTP/1.1\" 200 205328 \"http://localhost:8080/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\" \"-\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"172.17.0.1 - - [06/Dec/2023:18:46:41 +0000] \"GET /static/js/main.fd93a99c.chunk.js HTTP/1.1\" 200 20621 \"http://localhost:8080/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\" \"-\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"172.17.0.1 - - [06/Dec/2023:18:46:42 +0000] \"GET /manifest.json HTTP/1.1\" 200 492 \"http://localhost:8080/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\" \"-\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"172.17.0.1 - - [06/Dec/2023:18:46:42 +0000] \"GET /favicon.ico HTTP/1.1\" 200 3150 \"http://localhost:8080/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\" \"-\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"172.17.0.1 - - [06/Dec/2023:18:46:42 +0000] \"GET /logo192.png HTTP/1.1\" 200 5347 \"http://localhost:8080/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\" \"-\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 3 (SIGQUIT) received, shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 30#30: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 31#31: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 30#30: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 33#33: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 31#31: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 34#34: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 35#35: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 32#32: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 36#36: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 37#37: gracefully shutting down\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 34#34: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 33#33: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 32#32: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 36#36: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 35#35: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 37#37: exiting\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 30#30: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 31#31: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 32#32: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 33#33: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 34#34: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 37#37: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 36#36: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 35#35: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 31\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 31 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 29 (SIGIO) received\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 37\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 34 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 37 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 29 (SIGIO) received\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 34\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 33\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 33 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 29 (SIGIO) received\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 35\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 35 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 36 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 29 (SIGIO) received\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 32\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 32 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 29 (SIGIO) received\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: signal 17 (SIGCHLD) received from 30\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: worker process 30 exited with code 0\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"2023/12/06 19:25:33 [notice] 1#1: exit\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] http server listening on port 4001\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] > socket-client@0.1.0 start /app/socket-client\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] > react-scripts start\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Starting the development server...\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Compiled successfully!\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] You can now view socket-client in the browser.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1]   Local:            http://localhost:3000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1]   On Your Network:  http://172.17.0.3:3000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] Note that the development build is not optimized.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] To create a production build, use npm run build.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] \n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> react-socket-app@1.0.0 start /app\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"> concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] /bin/sh: cd: line 0: can't cd to socket-client: No such file or directory\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[1] cd socket-client && npm start exited with code 2\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"--> Sending SIGTERM to other processes..\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[0] node server.js exited with code null\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! code ELIFECYCLE\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! errno 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! react-socket-app@1.0.0 start: `concurrently --kill-others \"node server.js\" \"cd socket-client && npm start\"`\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Exit status 1\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! \n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! Failed at the react-socket-app@1.0.0 start script.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR! A complete log of this run can be found in:\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"npm ERR!     /root/.npm/_logs/2023-11-22T06_42_14_881Z-debug.log\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=info msg=\"auto snapshotter: using overlayfs\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=warning msg=\"using host network as the default\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=info msg=\"found worker \\\"1nq0040jgovqplzd3ffdvu4ry\\\", labels=map[org.mobyproject.buildkit.worker.executor:oci org.mobyproject.buildkit.worker.hostname:0a56869ace40 org.mobyproject.buildkit.worker.network:host org.mobyproject.buildkit.worker.oci.process-mode:sandbox org.mobyproject.buildkit.worker.selinux.enabled:false org.mobyproject.buildkit.worker.snapshotter:overlayfs], platforms=[linux/amd64 linux/amd64/v2 linux/amd64/v3 linux/386]\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=warning msg=\"skipping containerd worker, as \\\"/run/containerd/containerd.sock\\\" does not exist\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=info msg=\"found 1 workers, default=\\\"1nq0040jgovqplzd3ffdvu4ry\\\"\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=warning msg=\"currently, only the default worker can be used.\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:04:29Z\" level=info msg=\"running server on /run/buildkit/buildkitd.sock\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T06:10:26Z\" level=error msg=\"/moby.buildkit.v1.Control/Solve returned error: rpc error: code = Unknown desc = failed to compute cache key: failed to calculate checksum of ref 1nq0040jgovqplzd3ffdvu4ry::7btdxy2kk3uwps12mye1wtxlr: \\\"/app/dist\\\": not found\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=info msg=\"auto snapshotter: using overlayfs\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=warning msg=\"using host network as the default\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=info msg=\"found worker \\\"r5hz34bft4coqej5k27e4vion\\\", labels=map[org.mobyproject.buildkit.worker.executor:oci org.mobyproject.buildkit.worker.hostname:f9cc49d212b2 org.mobyproject.buildkit.worker.network:host org.mobyproject.buildkit.worker.oci.process-mode:sandbox org.mobyproject.buildkit.worker.selinux.enabled:false org.mobyproject.buildkit.worker.snapshotter:overlayfs], platforms=[linux/amd64 linux/amd64/v2 linux/amd64/v3 linux/386]\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=warning msg=\"skipping containerd worker, as \\\"/run/containerd/containerd.sock\\\" does not exist\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=info msg=\"found 1 workers, default=\\\"r5hz34bft4coqej5k27e4vion\\\"\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=warning msg=\"currently, only the default worker can be used.\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:29:13Z\" level=info msg=\"running server on /run/buildkit/buildkitd.sock\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:51:36Z\" level=warning msg=\"forcibly turning on oci-mediatype mode for attestations\" spanID=e036a16b3692a6cd traceID=060fffe5d6ab37a5e1cb3a6462b52816\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-11-22T15:54:30Z\" level=warning msg=\"forcibly turning on oci-mediatype mode for attestations\" spanID=29c56bbd9c931dba traceID=8bcf09641285202e6a1debb6e2e0454b\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=info msg=\"auto snapshotter: using overlayfs\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=warning msg=\"using host network as the default\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=info msg=\"found worker \\\"r5hz34bft4coqej5k27e4vion\\\", labels=map[org.mobyproject.buildkit.worker.executor:oci org.mobyproject.buildkit.worker.hostname:f9cc49d212b2 org.mobyproject.buildkit.worker.network:host org.mobyproject.buildkit.worker.oci.process-mode:sandbox org.mobyproject.buildkit.worker.selinux.enabled:false org.mobyproject.buildkit.worker.snapshotter:overlayfs], platforms=[linux/amd64 linux/amd64/v2 linux/amd64/v3 linux/386]\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=warning msg=\"skipping containerd worker, as \\\"/run/containerd/containerd.sock\\\" does not exist\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=info msg=\"found 1 workers, default=\\\"r5hz34bft4coqej5k27e4vion\\\"\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=warning msg=\"currently, only the default worker can be used.\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"time=\"2023-12-07T12:59:15Z\" level=info msg=\"running server on /run/buildkit/buildkitd.sock\"\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Watching for file changes with StatReloader\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Performing system checks...\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"System check identified no issues (0 silenced).\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"December 08, 2023 - 16:06:53\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Django version 3.0.8, using settings 'auth_system.settings'\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Starting development server at http://0.0.0.0:8000/\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"Quit the server with CONTROL-C.\n","stream":"stdout"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[08/Dec/2023 16:07:29] \"GET / HTTP/1.1\" 200 2365\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[08/Dec/2023 16:07:29] \"GET /favicon.ico HTTP/1.1\" 200 2365\n","stream":"stderr"}
1970-01-01T00:33:43+00:00	docker.logs	{"log":"[08/Dec/2023 16:07:32] \"GET /favicon.ico HTTP/1.1\" 200 2365\n","stream":"stderr"}
